Description: Move most helper binaries to /usr/lib/codelite
Author: James Cowgill <jcowgill@debian.org>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/LiteEditor/manager.cpp
+++ b/LiteEditor/manager.cpp
@@ -1511,8 +1511,7 @@ wxString Manager::GetProjectExecutionCom
     wd = bldConf->GetWorkingDirectory();
     wd = MacroManager::Instance()->Expand(wd, NULL, projectName);
 
-    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetExecutablePath());
-    fnCodeliteTerminal.SetFullName("codelite-terminal");
+    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetBinaryFullPath("codelite-terminal"));
 
     wxString title;
     title << cmd << " " << cmdArgs;
@@ -1555,8 +1554,7 @@ wxString Manager::GetProjectExecutionCom
             wxString command;
             if(bldConf->GetPauseWhenExecEnds()) {
                 wxString ld_lib_path;
-                wxFileName exePath(clStandardPaths::Get().GetExecutablePath());
-                wxFileName exeWrapper(exePath.GetPath(), wxT("codelite_exec"));
+                wxFileName exeWrapper(clStandardPaths::Get().GetBinaryFullPath("codelite_exec"));
 
                 if(wxGetEnv(wxT("LD_LIBRARY_PATH"), &ld_lib_path) && ld_lib_path.IsEmpty() == false) {
                     command << wxT("/bin/sh -f ") << exeWrapper.GetFullPath() << wxT(" LD_LIBRARY_PATH=") << ld_lib_path
--- a/Plugin/globals.cpp
+++ b/Plugin/globals.cpp
@@ -1764,7 +1764,7 @@ IProcess* LaunchTerminal(const wxString&
 
 #else
     wxString command;
-    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetExecutablePath());
+    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetBinFolder());
 
 #if defined(__WXMAC__)
     command << "/usr/bin/open \"" << fnCodeliteTerminal.GetPath(true) << "codelite-terminal.app\" --args ";
@@ -1793,8 +1793,7 @@ wxString MakeExecInShellCommand(const wx
     wxString title(cmd);
 
     OptionsConfigPtr opts = EditorConfigST::Get()->GetOptions();
-    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetExecutablePath());
-    fnCodeliteTerminal.SetFullName("codelite-terminal");
+    wxFileName fnCodeliteTerminal(clStandardPaths::Get().GetBinaryFullPath("codelite-terminal"));
 
 // change directory to the working directory
 #if defined(__WXMAC__)
@@ -1826,8 +1825,7 @@ wxString MakeExecInShellCommand(const wx
         // build the command
         wxString command;
         wxString ld_lib_path;
-        wxFileName exePath(clStandardPaths::Get().GetExecutablePath());
-        wxFileName exeWrapper(exePath.GetPath(), wxT("codelite_exec"));
+        wxFileName exeWrapper(clStandardPaths::Get().GetBinaryFullPath("codelite_exec"));
 
         if(wxGetEnv(wxT("LD_LIBRARY_PATH"), &ld_lib_path) && ld_lib_path.IsEmpty() == false) {
             command << wxT("/bin/sh -f ") << exeWrapper.GetFullPath() << wxT(" LD_LIBRARY_PATH=") << ld_lib_path
--- a/Plugin/pipedprocess.cpp
+++ b/Plugin/pipedprocess.cpp
@@ -29,6 +29,7 @@
 #include <wx/sstream.h>
 #include "wx/msgdlg.h"
 #include <wx/filename.h>
+#include "cl_standard_paths.h"
 
 PipedProcess::PipedProcess(int id, const wxString &cmdLine)
 : wxProcess(NULL, id)
@@ -55,8 +56,7 @@ void PipedProcess::Terminate()
 {
 #ifdef __WXGTK__
 	wxString cmd;
-	wxFileName exePath(clStandardPaths::Get().GetExecutablePath());
-	wxFileName script(exePath.GetPath(), wxT("codelite_kill_children"));
+	wxFileName script(clStandardPaths::Get().GetBinaryFullPath("codelite_kill_children"));
 	cmd << wxT("/bin/sh -f ") << script.GetFullPath() << wxT(" ") << GetPid();
 	wxExecute(cmd, wxEXEC_ASYNC);
 #else
--- a/CodeLite/macros.h
+++ b/CodeLite/macros.h
@@ -31,6 +31,8 @@
 #include <map>
 #include <set>
 
+#include "cl_standard_paths.h"
+
 //-------------------------------------------------------
 // wxWidgets Connect macros
 //-------------------------------------------------------
@@ -106,7 +108,7 @@
 #ifdef __WXGTK__
 #define TERMINAL_CMD                                               \
     wxString::Format(wxT("%s/codelite_xterm '$(TITLE)' '$(CMD)'"), \
-                     wxFileName(clStandardPaths::Get().GetExecutablePath()).GetPath().c_str())
+                     clStandardPaths::Get().GetBinFolder().c_str())
 #elif defined(__WXMAC__)
 #define TERMINAL_CMD wxString::Format(wxT("%s/OpenTerm '$(CMD)'"), clStandardPaths::Get().GetDataDir().c_str())
 #else
--- a/LiteEditor/app.cpp
+++ b/LiteEditor/app.cpp
@@ -671,8 +671,7 @@ bool CodeLiteApp::OnInit()
 #endif
     wxString oldpath;
     wxGetEnv(wxT("PATH"), &oldpath);
-    wxFileName execfpath(clStandardPaths::Get().GetExecutablePath());
-    wxSetEnv(wxT("PATH"), oldpath + pathsep + execfpath.GetPath());
+    wxSetEnv(wxT("PATH"), oldpath + pathsep + clStandardPaths::Get().GetBinFolder());
     wxString newpath;
     wxGetEnv(wxT("PATH"), &newpath);
 
--- a/CodeLite/procutils.cpp
+++ b/CodeLite/procutils.cpp
@@ -433,22 +433,11 @@ bool ProcUtils::Shell(const wxString& pr
     if(!programConsoleCommand.IsEmpty()) {
         tokens = wxStringTokenize(programConsoleCommand, wxT(" "), wxTOKEN_STRTOK);
         if(!tokens.IsEmpty()) {
-            configuredTerminal = wxStringTokenize(tokens.Item(0), wxT("/"), wxTOKEN_STRTOK);
-            if(!configuredTerminal.IsEmpty()) {
-                terminal = configuredTerminal.Last();
-                tokens.Clear();
-                configuredTerminal.Clear();
-            }
+            terminal = tokens.Item(0);
         }
     }
     if(Locate(terminal, where)) {
-        if(terminal == wxT("konsole")) {
-            wxString path = wxGetCwd();
-            terminal.Clear();
-            terminal << where << wxT(" --workdir \"") << path << wxT("\"");
-        } else {
-            terminal = where;
-        }
+        terminal = where;
     } else {
         return false;
     }
--- a/codelite_terminal/procutils.cpp
+++ b/codelite_terminal/procutils.cpp
@@ -436,22 +436,11 @@ bool ProcUtils::Shell(const wxString &pr
     if ( !programConsoleCommand.IsEmpty() ) {
         tokens = wxStringTokenize ( programConsoleCommand, wxT ( " " ), wxTOKEN_STRTOK );
         if ( !tokens.IsEmpty() ) {
-            configuredTerminal = wxStringTokenize ( tokens.Item(0), wxT ( "/" ), wxTOKEN_STRTOK );
-            if ( !configuredTerminal.IsEmpty() ) {
-                terminal = configuredTerminal.Last();
-                tokens.Clear();
-                configuredTerminal.Clear();
-            }
+            terminal = tokens.Item(0);
         }
     }
     if ( Locate ( terminal, where ) ) {
-        if ( terminal == wxT("konsole") ) {
-            wxString path = wxGetCwd();
-            terminal.Clear();
-            terminal << where << wxT(" --workdir \"") << path << wxT("\"");
-        } else {
-            terminal = where;
-        }
+        terminal = where;
     } else {
         return false;
     }
--- a/CodeLite/cl_standard_paths.cpp
+++ b/CodeLite/cl_standard_paths.cpp
@@ -96,8 +96,7 @@ wxString clStandardPaths::GetDataDir() c
 
 wxString clStandardPaths::GetBinFolder() const
 {
-    wxFileName fnExe(wxStandardPaths::Get().GetExecutablePath());
-    return fnExe.GetPath();
+    return wxStandardPaths::Get().GetPluginsDir();
 }
 
 wxString clStandardPaths::GetBinaryFullPath(const wxString& toolname) const
