Description: Add LLVM_VERSION option to set the current llvm version
 This patch makes codelite use directories given by llvm-config for the
 LLDB parts. Since there is no generic lldb-dev package in Debian, I've
 had to manually specify the version of LLVM to use, and this patch adds
 that option to the cmake script.
Author: James Cowgill <james410@cowgill.org.uk>
Forwarded: not-needed
Last-Update: 2014-06-06
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -343,8 +343,13 @@
   set( CLANG_BINARY "${CL_SRC_ROOT}/sdk/clang/lib/libclang.dylib")
 
 elseif (UNIX)
-  execute_process(COMMAND llvm-config --includedir OUTPUT_VARIABLE CLANG_INCLUDE OUTPUT_STRIP_TRAILING_WHITESPACE)
-  execute_process(COMMAND llvm-config --libdir OUTPUT_VARIABLE CLANG_LIBDIR OUTPUT_STRIP_TRAILING_WHITESPACE)
+  set(LLVM_CONFIG_BIN "llvm-config")
+  if(LLVM_VERSION)
+    set(LLVM_CONFIG_BIN "llvm-config-${LLVM_VERSION}")
+  endif()
+
+  execute_process(COMMAND ${LLVM_CONFIG_BIN} --includedir OUTPUT_VARIABLE CLANG_INCLUDE OUTPUT_STRIP_TRAILING_WHITESPACE)
+  execute_process(COMMAND ${LLVM_CONFIG_BIN} --libdir OUTPUT_VARIABLE CLANG_LIBDIR OUTPUT_STRIP_TRAILING_WHITESPACE)
   set( CLANG_LIBRARY "-L${CLANG_LIBDIR} -lclang" )
   set( CLANG_BINARY "" )
 endif()
--- a/LLDBDebugger/CMakeLists.txt
+++ b/LLDBDebugger/CMakeLists.txt
@@ -1,27 +1,12 @@
 macro( FIND_LLDB_OFFICIAL )
 
-    ## Locate the official packages
-    find_library(LIBLLDB_T
-                 NAMES liblldb.so
-                 HINTS  /usr/lib /usr/local/lib ${CMAKE_INSTALL_LIBDIR})
+    # Use CLANG_INCLUDE and CLANG_LIBDIR (from toplevel CMakeLists.txt)
+    set(LLDB_OFFICIAL_FOUND 1)
+    set(LIBLLDB lldb)
+    set(LIBLLDB_INCLUDE "${CLANG_INCLUDE}")
+    set(LLDB_LIB_PATH "${CLANG_LIBDIR}")
+    set(LIBLLDB_INSTALL_NEEDED 0)
 
-    find_path(LIBLLDB_INCLUDE_T NAMES lldb/API/SBDebugger.h
-              HINTS 
-              /usr/lib/llvm-3.5/include 
-              /usr/include/llvm-3.5 
-              /usr/include/llvm
-              /usr/local/include
-              )
-
-    if ( LIBLLDB_T STREQUAL "LIBLLDB_T-NOTFOUND" OR LIBLLDB_INCLUDE_T STREQUAL "LIBLLDB_INCLUDE_T-NOTFOUND" )
-        set(LIBLLDB "LIBLLDB-NOTFOUND")
-        set(LIBLLDB_INCLUDE "LIBLLDB_INCLUDE-NOTFOUND")
-    else()
-        set( LLDB_OFFICIAL_FOUND 1 )
-        set(LIBLLDB ${LIBLLDB_T})
-        set(LIBLLDB_INCLUDE ${LIBLLDB_INCLUDE_T})
-        set(LIBLLDB_INSTALL_NEEDED 0)
-    endif()
 endmacro()
 
 set( BUILD_LLDB 0 )
