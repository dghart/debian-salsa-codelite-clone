Description: Use x-terminal-emulator in preference to xterm
Author: James Cowgill <james410@cowgill.org.uk>
Author: Alessio Treglia <alessio@debian.org>
Forwarded: not-needed
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/CodeLite/procutils.cpp
+++ b/CodeLite/procutils.cpp
@@ -430,7 +430,7 @@ bool ProcUtils::Shell(const wxString& pr
         terminal = where;
     }
     cmd = terminal;*/
-    terminal = wxT("xterm");
+    terminal = wxT("x-terminal-emulator");
     if(!programConsoleCommand.IsEmpty()) {
         tokens = wxStringTokenize(programConsoleCommand, wxT(" "), wxTOKEN_STRTOK);
         if(!tokens.IsEmpty()) {
--- a/codelite_terminal/procutils.cpp
+++ b/codelite_terminal/procutils.cpp
@@ -434,7 +434,7 @@ bool ProcUtils::Shell(const wxString &pr
     	terminal = where;
     }
     cmd = terminal;*/
-    terminal = wxT ( "xterm" );
+    terminal = wxT ( "x-terminal-emulator" );
     if ( !programConsoleCommand.IsEmpty() ) {
         tokens = wxStringTokenize ( programConsoleCommand, wxT ( " " ), wxTOKEN_STRTOK );
         if ( !tokens.IsEmpty() ) {
--- a/LiteEditor/manager.cpp
+++ b/LiteEditor/manager.cpp
@@ -1934,7 +1934,7 @@ void Manager::DbgStart(long attachPid)
     wxString terminal;
     wxArrayString tokens;
     wxArrayString configuredTerminal;
-    terminal = wxT("xterm");
+    terminal = wxT("x-terminal-emulator");
     if(!EditorConfigST::Get()->GetOptions()->GetProgramConsoleCommand().IsEmpty()) {
         tokens =
             wxStringTokenize(EditorConfigST::Get()->GetOptions()->GetProgramConsoleCommand(), wxT(" "), wxTOKEN_STRTOK);
--- a/Plugin/consolefinder.cpp
+++ b/Plugin/consolefinder.cpp
@@ -153,7 +153,9 @@ wxString ConsoleFinder::GetConsoleName()
 	//try to locate the default terminal
 	wxString terminal;
 	wxString where;
-	if (ExeLocator::Locate(wxT("gnome-terminal"), where)) {
+	if (ExeLocator::Locate(wxT("x-terminal-emulator"), where)) {
+		terminal = wxT("x-terminal-emulator -e ");
+	} else if (ExeLocator::Locate(wxT("gnome-terminal"), where)) {
 		terminal = wxT("gnome-terminal -e ");
 	} else if (ExeLocator::Locate(wxT("konsole"), where)) {
 		terminal = wxT("konsole");
--- a/LiteEditor/app.cpp
+++ b/LiteEditor/app.cpp
@@ -219,7 +219,9 @@ static void WaitForDebugger(int signo)
         char command[256];
         memset(command, 0, sizeof(command));
 
-        if(ExeLocator::Locate(wxT("gnome-terminal"), where)) {
+        if(ExeLocator::Locate(wxT("x-terminal-emulator"), where)) {
+            sprintf(command, "x-terminal-emulator -T 'gdb' -e 'gdb -p %d'", getpid());
+        } else if(ExeLocator::Locate(wxT("gnome-terminal"), where)) {
             sprintf(command, "gnome-terminal -t 'gdb' -e 'gdb -p %d'", getpid());
         } else if(ExeLocator::Locate(wxT("konsole"), where)) {
             sprintf(command, "konsole -T 'gdb' -e 'gdb -p %d'", getpid());
--- a/Runtime/codelite_xterm
+++ b/Runtime/codelite_xterm
@@ -4,9 +4,7 @@
 ## which allows codelite to export LD_LIBRARY_PATH into the exterm
 ## shell
 
-# Force xterm to provide at least a scrollbar, and 1000 lines of scrollback,
-# in case the user hasn't set any preferences of his own in ~/.Xresources
-terminal="xterm -sb -sl 1000"
+terminal="x-terminal-emulator"
 program_title=$1
 
 if [ "$program_title" = "" ]; then
