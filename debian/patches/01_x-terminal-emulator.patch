Author: Chow Loong Jin <hyperair@ubuntu.com>
Description: Fallback on "x-terminal-emulator" if all other terminal
 emulators cannot be found.
---
 CodeLite/procutils.cpp   |    4 +++-
 LiteEditor/manager.cpp   |    4 ++--
 Plugin/consolefinder.cpp |    6 ++++--
 Plugin/macros.h          |    2 +-
 4 files changed, 10 insertions(+), 6 deletions(-)

--- codelite.orig/CodeLite/procutils.cpp
+++ codelite/CodeLite/procutils.cpp
@@ -419,7 +419,9 @@ bool ProcUtils::Shell()
 	//try to locate the default terminal
 	wxString terminal;
 	wxString where;
-	if (Locate(wxT("gnome-terminal"), where)) {
+	if (Locate(wxT("x-terminal-emulator"), where)) {
+		terminal = where;
+	} else if (Locate(wxT("gnome-terminal"), where)) {
 		terminal = where;
 	} else if (Locate(wxT("konsole"), where)) {
 		terminal = where;
--- codelite.orig/LiteEditor/manager.cpp
+++ codelite/LiteEditor/manager.cpp
@@ -1897,8 +1897,8 @@ void Manager::DbgStart ( long pid )
 
 #if defined(__WXGTK__)
 	wxString where;
-	if ( !ExeLocator::Locate ( wxT ( "xterm" ), where ) ) {
-		wxMessageBox ( _ ( "Failed to locate 'xterm' application required by CodeLite, please install it and try again!" ), wxT ( "CodeLite" ), wxOK|wxCENTER|wxICON_WARNING, Frame::Get() );
+	if ( !ExeLocator::Locate ( wxT ( "x-terminal-emulator" ), where ) ) {
+		wxMessageBox ( _ ( "Failed to locate 'x-terminal-emulator' application required by CodeLite, please install it and try again!" ), wxT ( "CodeLite" ), wxOK|wxCENTER|wxICON_WARNING, Frame::Get() );
 		return;
 	}
 #endif
--- codelite.orig/Plugin/macros.h
+++ codelite/Plugin/macros.h
@@ -95,7 +95,7 @@ const wxString SEARCH_IN_CURR_FILE_PROJE
 
 // terminal macro
 #ifdef __WXGTK__
-#define TERMINAL_CMD  wxString::Format(wxT("%s/codelite_xterm '$(TITLE)' '$(CMD)'"), wxFileName(wxStandardPaths::Get().GetExecutablePath()).GetPath().c_str())
+#define TERMINAL_CMD  wxT("x-terminal-emulator -sb -title '$(TITLE)' -e '$(CMD)'")
 #elif defined(__WXMAC__)
 #define TERMINAL_CMD  wxString::Format(wxT("%s/OpenTerm '$(CMD)'"), wxStandardPaths::Get().GetDataDir().c_str())
 #else
--- codelite.orig/Plugin/consolefinder.cpp
+++ codelite/Plugin/consolefinder.cpp
@@ -153,7 +153,9 @@ wxString ConsoleFinder::GetConsoleName()
 	//try to locate the default terminal
 	wxString terminal;
 	wxString where;
-	if (ExeLocator::Locate(wxT("gnome-terminal"), where)) {
+	if (ExeLocator::Locate(wxT("x-terminal-emulator"), where)) {
+		terminal = wxT("x-terminal-emulator -e ");
+	}else if (ExeLocator::Locate(wxT("gnome-terminal"), where)) {
 		terminal = wxT("gnome-terminal -e ");
 	} else if (ExeLocator::Locate(wxT("konsole"), where)) {
 		terminal = wxT("konsole");
@@ -162,7 +164,7 @@ wxString ConsoleFinder::GetConsoleName()
 	}
 
 	if (cmd.IsEmpty()) {
-		cmd = wxT("xterm -e ");
+		cmd = wxT("x-terminal-emulator -e ");
 	}
 
 	cmd = terminal;
