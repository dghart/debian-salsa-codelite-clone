//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// copyright            : (C) 2013 by Eran Ifrah
// file name            : syntaxhighlightbasedlg.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef SYNTAXHIGHLIGHTBASEDLG_BASE_CLASSES_H
#define SYNTAXHIGHLIGHTBASEDLG_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/sizer.h>
#include <wx/statbox.h>
#include <wx/stattext.h>
#include <wx/clrpicker.h>
#include <wx/button.h>
#include <wx/panel.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/fontpicker.h>
#include <wx/textctrl.h>
#include <wx/listbox.h>
#include <wx/checkbox.h>
#include <wx/statline.h>

class SyntaxHighlightBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText91;
    wxColourPickerCtrl* m_colourPickerOutputPanesFgColour;
    wxStaticText* m_staticText911;
    wxColourPickerCtrl* m_colourPickerOutputPanesBgColour;
    wxButton* m_buttonOk;
    wxButton* m_buttonCancel;
    wxButton* m_buttonApply;
    wxButton* m_buttonDefaults;

protected:
    virtual void OnOutputViewColourChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnButtonOK(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonCancel(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonApply(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRestoreDefaults(wxCommandEvent& event) { event.Skip(); }

public:
    SyntaxHighlightBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Syntax Highlight:"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SyntaxHighlightBaseDlg();
};


class LexerPageBase : public wxPanel
{
protected:
    wxNotebook* m_notebook2;
    wxPanel* m_panel4;
    wxStaticText* m_staticText6;
    wxFontPickerCtrl* m_globalFontPicker;
    wxStaticText* m_staticText7;
    wxColourPickerCtrl* m_globalBgColourPicker;
    wxStaticText* m_staticText8;
    wxTextCtrl* m_fileSpec;
    wxPanel* m_panel6;
    wxListBox* m_properties;
    wxStaticText* m_staticText2;
    wxFontPickerCtrl* m_fontPicker;
    wxStaticText* m_staticText3;
    wxColourPickerCtrl* m_colourPicker;
    wxStaticText* m_staticText4;
    wxColourPickerCtrl* m_bgColourPicker;
    wxCheckBox* m_eolFilled;
    wxCheckBox* m_styleWithinPreProcessor;
    wxStaticLine* m_staticline1;
    wxStaticText* m_staticText1;
    wxButton* m_button5;
    wxButton* m_button6;
    wxButton* m_button7;
    wxButton* m_button8;
    wxButton* m_button9;
    wxPanel* m_panel8;
    wxStaticText* m_staticText9;
    wxColourPickerCtrl* m_colourPickerSelTextBgColour;
    wxButton* m_buttonTextSelApplyToAll;

protected:
    virtual void OnFontChanged(wxFontPickerEvent& event) { event.Skip(); }
    virtual void OnColourChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnText(wxCommandEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEolFilled(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStyleWithinPreprocessor(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStyleWithingPreProcessorUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton0(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton1(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton2(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton3(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditKeyWordsButton4(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSelTextChanged(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnTextSelApplyToAll(wxCommandEvent& event) { event.Skip(); }

public:
    LexerPageBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~LexerPageBase();
};

#endif
