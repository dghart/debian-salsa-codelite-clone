<?xml version="1.0" encoding="utf-8"?>
<CodeLite_Project Name="Parser">
  <Plugins>
    <Plugin Name="qmake">
      <![CDATA[00010001N0007Release000000000000]]>
    </Plugin>
  </Plugins>
  <VirtualDirectory Name="src">
    <File Name="scope_parser.cpp"/>
    <File Name="cpp_lexer.cpp"/>
    <File Name="main.cpp"/>
    <File Name="var_parser.cpp"/>
    <File Name="variable.cpp"/>
    <File Name="cpp_expr_parser.cpp"/>
    <File Name="cpp_expr_lexer.cpp"/>
    <File Name="expression_result.cpp"/>
    <File Name="function.cpp"/>
    <File Name="cpp_func_parser.cpp"/>
  </VirtualDirectory>
  <VirtualDirectory Name="incldue">
    <File Name="cpp_lexer.h"/>
    <File Name="variable.h"/>
    <File Name="expression_result.h"/>
    <File Name="function.h"/>
  </VirtualDirectory>
  <VirtualDirectory Name="grammar">
    <File Name="cpp.l"/>
    <File Name="cpp_scope_grammar.y"/>
    <File Name="cpp_variables_grammar.y"/>
    <File Name="expr_grammar.y"/>
    <File Name="expr_lexer.l"/>
    <File Name="cpp_func_parser.y"/>
  </VirtualDirectory>
  <Dependencies/>
  <VirtualDirectory Name="test_suite">
    <File Name="Release/test.h"/>
  </VirtualDirectory>
  <Settings Type="Executable">
    <Configuration Name="Release" CompilerType="gnu g++" DebuggerType="GNU gdb debugger" Type="Executable" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
      <Compiler Options="-g;" Required="yes" PreCompiledHeader="">
        <IncludePath Value="."/>
      </Compiler>
      <Linker Options="-O2" Required="yes">
        <LibraryPath Value="."/>
        <LibraryPath Value="./Release"/>
      </Linker>
      <ResourceCompiler Options="" Required="yes"/>
      <General OutputFile="./Release/CppParser" IntermediateDirectory="./Release" Command="CppParser" CommandArguments="" WorkingDirectory="./Release" PauseExecWhenProcTerminates="yes"/>
      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="">
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="yes">copy *.h ..\CodeLite\.</Command>
        <Command Enabled="yes">copy *.cpp ..\CodeLite\.</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild>scope_parser.cpp cpp_lexer.cpp var_parser.cpp cpp_expr_lexer.cpp cpp_expr_parser.cpp cpp_func_parser.cpp
scope_parser.cpp: cpp_scope_grammar.y
	yacc -dl  -t -v -pcl_scope_ cpp_scope_grammar.y
	mv y.tab.c scope_parser.cpp
	mv y.tab.h cpp_lexer.h

cpp_lexer.cpp: cpp.l
	flex -L  -Pcl_scope_ cpp.l
	mv lex.cl_scope_.c cpp_lexer.cpp

var_parser.cpp: cpp_variables_grammar.y
	yacc -l  -t -v -pcl_var_ cpp_variables_grammar.y
	mv y.tab.c var_parser.cpp

cpp_expr_lexer.cpp: expr_lexer.l
	flex -L  -Pcl_expr_ expr_lexer.l
	mv lex.cl_expr_.c cpp_expr_lexer.cpp

cpp_expr_parser.cpp: expr_grammar.y
	yacc -l  -t -v -pcl_expr_ expr_grammar.y
	mv y.tab.c cpp_expr_parser.cpp

cpp_func_parser.cpp: cpp_func_parser.y
	yacc -l  -t -v -pcl_func_ cpp_func_parser.y
	mv y.tab.c cpp_func_parser.cpp
</CustomPreBuild>
      </AdditionalRules>
    </Configuration>
    <GlobalSettings>
      <Compiler Options="">
        <IncludePath Value="."/>
      </Compiler>
      <Linker Options="">
        <LibraryPath Value="."/>
      </Linker>
      <ResourceCompiler Options=""/>
    </GlobalSettings>
  </Settings>
  <Dependencies Name="Release"/>
</CodeLite_Project>
